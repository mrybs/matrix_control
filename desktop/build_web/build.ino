String index_js = "const IP = '';let effect_id = \"rainbow\";let hue = 50;let rainbow = false;let speed = 249;let saturation = 50;let chance = 50;let settings = {  'off': [],  'rainbow': ['speed', 'saturation'],  'confetti': ['speed', 'saturation'],  'ball': ['hue', 'speed', 'saturation'],  'snowing': ['hue', 'speed', 'chance', 'saturation'],  'sinusoid': ['hue', 'speed', 'saturation'],  'doubleSinusoid': ['hue', 'speed', 'saturation']};async function setEffect(){  let effectCombobox = document.getElementById(\"effectSelect\");  await fetch(IP + 'api?function=effect&effect='+effectCombobox.value);  await showEffectSettings();}async function imageLoad(){  let imageTB = document.getElementById(\"imageTB\");  await fetch(IP + 'api?function=image&image='+imageTB.value);  await onChange();}async function onChange(){  let hueSliderLabel = document.getElementById('hueLabel');  let speedSliderLabel = document.getElementById('speedLabel');  let chanceSliderLabel = document.getElementById('chanceLabel');  let saturationSliderLabel = document.getElementById('saturationLabel');  let hueSlider = document.getElementById('hue');  let speedSlider = document.getElementById('speed');  let chanceSlider = document.getElementById('chance');  let saturationSlider = document.getElementById('saturation');  let rainbowCB = document.getElementById('rainbow');  hueSliderLabel.innerHTML = hueSlider.value + '%';  speedSliderLabel.innerHTML = speedSlider.value;  chanceSliderLabel.innerHTML = chanceSlider.value + '%';  saturationSliderLabel.innerHTML = saturationSlider.value + '%';  hue = hueSlider.value*2.55;  speed = speedSlider.value;  chance = chanceSlider.value;  saturation = saturationSlider.value*2.55;  rainbow = rainbowCB.checked;  let response = await fetch(IP + 'api?' + new URLSearchParams({    'function': 'effectSettings',    'hue': hue,    'rainbow': rainbow-0,    'speed': speed,    'saturation': saturation,    'chance': chance  }));  await reloadSettings();}async function reloadSettings(){  let response = await fetch(IP + 'api?' + new URLSearchParams({    'function': 'getEffectSettings'  }));  let effectSettings = await response.json();  effect_id = effectSettings['effect_id'];  hue = effectSettings['hue'];  rainbow = !!(effectSettings['rainbow']-0);  speed = effectSettings['speed'];  chance = effectSettings['chance'];  saturation = effectSettings['saturation'];  let hueSliderLabel = document.getElementById('hueLabel');  let speedSliderLabel = document.getElementById('speedLabel');  let chanceSliderLabel = document.getElementById('chanceLabel');  let saturationSliderLabel = document.getElementById('saturationLabel');  let hueSlider = document.getElementById('hue');  let speedSlider = document.getElementById('speed');  let chanceSlider = document.getElementById('chance');  let saturationSlider = document.getElementById('saturation');  let effectCombobox = document.getElementById(\"effectSelect\");  let rainbowCB = document.getElementById('rainbow');  hueSlider.value = hue/2.55;  speedSlider.value = speed;  chanceSlider.value = chance;  saturationSlider.value = saturation/2.55;  hueSliderLabel.innerHTML = hueSlider.value + '%';  speedSliderLabel.innerHTML = speedSlider.value;  chanceSliderLabel.innerHTML = chanceSlider.value + '%';  saturationSliderLabel.innerHTML = saturationSlider.value + '%';  effectCombobox.value = effect_id;  rainbowCB.checked = rainbow;  await showEffectSettings();}async function showEffectSettings(){  let effectCombobox = document.getElementById(\"effectSelect\");  let hueSliderLabel = document.getElementById('hueLabel');  let speedSliderLabel = document.getElementById('speedLabel');  let chanceSliderLabel = document.getElementById('chanceLabel');  let saturationSliderLabel = document.getElementById('saturationLabel');  let hueSlider = document.getElementById('hueSlider');  let rainbowCheckbox = document.getElementById('rainbowCheckbox');  let speedSlider = document.getElementById('speedSlider');  let chanceSlider = document.getElementById('chanceSlider');  let saturationSlider = document.getElementById('saturationSlider');  let rainbowCB = document.getElementById('rainbow');  if(settings[effectCombobox.value].indexOf('hue') != -1){    rainbowCheckbox.style.display = 'flex';    if(!rainbowCB.checked)      hueSlider.style.display = 'flex';    else      hueSlider.style.display = 'none';  }else{    hueSlider.style.display = 'none';    rainbowCheckbox.style.display = 'none';  }  if(settings[effectCombobox.value].indexOf('speed') != -1){    speedSlider.style.display = 'flex';  }else{    speedSlider.style.display = 'none';  }  if(settings[effectCombobox.value].indexOf('chance') != -1){    chanceSlider.style.display = 'flex';  }else{    chanceSlider.style.display = 'none';  }  if(settings[effectCombobox.value].indexOf('saturation') != -1){    saturationSlider.style.display = 'flex';  }else{    saturationSlider.style.display = 'none';  }}";String styles_css = "h1{text-align: center;}button{border-radius: 5px;background: #ddd;color: #000;padding: 10px;}.textbox{border-radius: 5px;background: #ddd;color: #000;padding: 10px;display: inline;}#effectSelect{width: 20%;display: block;margin-left: 40%;}#imageTB{width: 65%;}#imageBtn{width: 25%;}#paint-tools{margin-top: 10px;display: block;}.center{text-align: center;}.combobox{border-radius: 5px;background: #ddd;color: #000;padding: 10px;}input{display: block;text-align:center;padding: 2px;}.settingsBox{background: #ddd;width: calc(20% - 30px);margin-left: 40%;padding: 15px;border-radius: 5px;margin-top: 20px;}.canvasBox{background: #ddd;width: calc(20% - 30px);margin-left: 40%;padding: 15px;border-radius: 5px;margin-top: 20px;}.label{width: 37.5%;text-align: right;display: block;font-size: 0.9em;}.checkboxLabel{width: 90%;text-align: right;display: block;font-size: 0.9em;}.slider{display: flex;margin-bottom:15px;}.sliderLabel{display: inline-block;width: 15%;margin-left: 2px;font-size: 0.9em;}.checkboxMain{display: inline-block;width: 15%;margin-right: 3px;}.sliderMain{display: inline-block;width: 47.5%;margin-right: 3px;}.minibutton{margin-top: 10px;width: 90%;}footer{width: 100%;height: 50px;display: block;}@media only screen and (min-width: 201px) {#effectSelect{width: 90%;margin-left: 5%;}.settingsBox{width: calc(90% - 30px);margin-left: 5%;}.canvasBox{width: calc(90% - 30px);margin-left: 5%;}#showImage{width: 90%;margin-left: 5%;}}@media only screen and (min-width: 401px) {#effectSelect{width: 80%;margin-left: 10%;}.settingsBox{width: calc(80% - 30px);margin-left: 10%;}.canvasBox{width: calc(80% - 30px);margin-left: 10%;}#showImage{width: 80%;margin-left: 10%;}}@media only screen and (min-width: 601px) {#effectSelect{width: 70%;margin-left: 15%;}.settingsBox{width: calc(70% - 30px);margin-left: 15%;}.canvasBox{width: calc(70% - 30px);margin-left: 15%;}#showImage{width: 70%;margin-left: 15%;}}@media only screen and (min-width: 801px) {#effectSelect{width: 50%;margin-left: 25%;}.settingsBox{width: calc(50% - 30px);margin-left: 25%;}.canvasBox{width: calc(50% - 30px);margin-left: 25%;}#showImage{width: 50%;margin-left: 25%;}}@media only screen and (min-width: 1001px) {#effectSelect{width: 40%;margin-left: 30%;}.settingsBox{width: calc(40% - 30px);margin-left: 30%;}.canvasBox{width: calc(40% - 30px);margin-left: 30%;}#showImage{width: 40%;margin-left: 30%;}}@media only screen and (min-width: 1201px) {#effectSelect{width: 30%;margin-left: 35%;}.settingsBox{width: calc(30% - 30px);margin-left: 35%;}.canvasBox{width: calc(30% - 30px);margin-left: 35%;}#showImage{width: 30%;margin-left: 35%;}}@media only screen and (min-width: 1401px) {#effectSelect{width: 25%;margin-left: 37.5%;}.settingsBox{width: calc(25% - 30px);margin-left: 37.5%;}.canvasBox{width: calc(25% - 30px);margin-left: 37.5%;}#showImage{width: 25%;margin-left: 37.5%;}}";String index_html = "<!DOCTYPE html><html><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><link href=\"styles.css\" rel=\"stylesheet\" type=\"text/css\"><link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css\"><link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v6.4.0/css/all.css\"><script src=\"https://cdn.jsdelivr.net/gh/mdbassit/Coloris@latest/dist/coloris.min.js\"></script><link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/mdbassit/Coloris@latest/dist/coloris.min.css\"/><title>Управление матрицeй</title></head><body><script src=\"index.js\"></script><h1>Управление матрицeй</h1><div class=\"center\"><h2>Выбор эффекта</h2><select name=\"\" class=\"combobox\" id=\"effectSelect\" onchange=\"setEffect()\"><option value=\"off\">&lt;выключено&gt;</option>    <option value=\"rainbow\">Радуга</option>    <option value=\"confetti\">Конфетти</option>    <option value=\"ball\">Мяч</option>    <option value=\"snowing\">Снегопад</option>    <option value=\"sinusoid\">Синусоида</option>    <option value=\"doubleSinusoid\">Двойная синусоида</option>  </select>  <div class=\"settingsBox\"><h3>Настройки эффектов</h3><div class=\"settings\"><div class=\"slider\" id=\"rainbowCheckbox\"><input class=\"checkboxMain\" type=\"checkbox\" id=\"rainbow\" name=\"rainbow\" min=\"0\" max=\"100\" onchange=\"onChange()\"><div class=\"checkboxLabel\" id=\"rainbowTitle\">Переливающиеся цвета</div><br></div><div class=\"slider\" id=\"hueSlider\"><div class=\"sliderLabel\" id=\"hueLabel\">50%</div><input class=\"sliderMain\" type=\"range\" id=\"hue\" name=\"hue\" min=\"0\" max=\"100\" onchange=\"onChange()\"><div class=\"label\" id=\"hueTitle\">Тон</div><br></div><div class=\"slider\" id=\"speedSlider\"><div class=\"sliderLabel\" id=\"speedLabel\">250</div><input class=\"sliderMain\" type=\"range\" id=\"speed\" name=\"speed\" min=\"1\" max=\"500\" onchange=\"onChange()\"><div class=\"label\" id=\"speedTitle\">Скорость</div><br></div><div class=\"slider\" id=\"chanceSlider\"><div class=\"sliderLabel\" id=\"chanceLabel\">50%</div><input class=\"sliderMain\" type=\"range\" id=\"chance\" name=\"chance\" min=\"0\" max=\"100\" onchange=\"onChange()\"><div class=\"label\" id=\"chanceTitle\">Шанс</div><br></div><div class=\"slider\" id=\"saturationSlider\"><div class=\"sliderLabel\" id=\"saturationLabel\">50%</div><input class=\"sliderMain\" type=\"range\" id=\"saturation\" name=\"saturation\" min=\"0\" max=\"100\" onchange=\"onChange()\"><div class=\"label\" id=\"saturationTitle\">Насыщенность</div><br></div></div>  </div>  <div id=\"showImage\"><h2>Вывод картинки</h2>  <input class=\"textbox\" id=\"imageTB\" name=\"imageTB\" placeholder=\"Картинка\">  <button id=\"imageBtn\" onclick=\"imageLoad()\">Загрузить</button>  </div>  <h2>Рисовалка</h2><div class=\"canvasBox\" id=\"imageDrawCanvasBox\"><canvas id=\"imageDrawCanvas\">Ваш браузер не поддерживает canvas</canvas><input id=\"imageDrawColorPicker\" type=\"text\" value=\"#000000\" data-coloris><br><div id=\"paint-tools\"><button onclick=\"eRefresh()\" id=\"refresh-btn\"><i class=\"fa-solid fa-rotate-right\"></i></button><button onclick=\"eBrush()\" id=\"paint-tool-brush\"><i class=\"paint-tool fa-solid fa-paintbrush\"></i></button><button onclick=\"eFill()\" id=\"paint-tool-fill\"><i class=\"paint-tool fa-solid fa-fill\"></i></button><button onclick=\"eEyeDropper()\" id=\"paint-tool-eye-dropper\"><i class=\"paint-tool fa-solid fa-eye-dropper\"></i></button></div><button class=\"minibutton\" onclick=\"sendImage()\">Отправить картинку</button></div></div><footer></footer><script src=\"canvas.js\"></script><script type=\"text/javascript\">reloadSettings()</script></body></html>";String canvas_js = "const WIDTH = 5;const HEIGHT = 5;let scale = 1;let pixels = [];for(let y = 0; y < HEIGHT; y++){pixels.push([]);for(let x = 0; x < WIDTH; x++){pixels[y][x] = '#000000';}}let canvasBox = document.getElementById('imageDrawCanvasBox');let colorPicker = document.getElementById('imageDrawColorPicker');let canvas = document.getElementById('imageDrawCanvas');canvas.width = canvasBox.offsetWidth - 30;canvas.height = canvas.width;let ctx = canvas.getContext('2d');let isPressed = false;canvas.addEventListener('mouseup', function(){isPressed = false;});canvas.addEventListener('mousedown', function(e){isPressed = true;if(mode == 'brush'){pos = windowToCanvas(canvas, e.clientX, e.clientY);pixels[Math.floor(pos.y/(canvas.height/HEIGHT),1)][Math.floor(pos.x/(canvas.width/WIDTH),1)]=colorPicker.value;}else if(mode == 'fill'){for(let y = 0; y < HEIGHT; y++){for(let x = 0; x < WIDTH; x++){pixels[y][x] = colorPicker.value;}}}else if(mode == 'eye-dropper'){pos = windowToCanvas(canvas, e.clientX, e.clientY);colorPicker.value=pixels[Math.floor(pos.y/(canvas.height/HEIGHT),1)][Math.floor(pos.x/(canvas.width/WIDTH),1)];colorPicker.dispatchEvent(new Event('input', { bubbles: true }));eBrush();}});canvas.addEventListener('mousemove', function(e){if(isPressed){if(mode == 'brush'){pos = windowToCanvas(canvas, e.clientX, e.clientY);pixels[Math.floor(pos.y/(canvas.height/HEIGHT),1)][Math.floor(pos.x/(canvas.width/WIDTH),1)]=colorPicker.value;}else if(mode == 'fill'){for(let y = 0; y < HEIGHT; y++){for(let x = 0; x < WIDTH; x++){pixels[y][x] = colorPicker.value;}}}else if(mode == 'eye-dropper'){pos = windowToCanvas(canvas, e.clientX, e.clientY);colorPicker.value=pixels[Math.floor(pos.y/(canvas.height/HEIGHT),1)][Math.floor(pos.x/(canvas.width/WIDTH),1)];colorPicker.dispatchEvent(new Event('input', { bubbles: true }));eBrush();}}});function render(){ctx.scale(scale, scale);ctx.fillStyle = '#ffffff';ctx.fillRect(0, 0, canvas.width, canvas.height);for(let y = 0; y < canvas.height; y+=canvas.height/HEIGHT){for(let x = 0; x < canvas.width; x+=canvas.width/WIDTH){ctx.fillStyle = pixels[y/(canvas.height/HEIGHT)][x/(canvas.width/WIDTH)];ctx.fillRect(x, y, canvas.width/WIDTH-1, canvas.height/HEIGHT-1);}}}function windowToCanvas(cnvs, x, y) {  let bbox = cnvs.getBoundingClientRect();  return { x: x - bbox.left * (cnvs.width / bbox.width),    y: y - bbox.top * (cnvs.height / bbox.height)  };}async function sendImage(){let data = '';for(let y = 0; y < HEIGHT; y++){for(let x = 0; x < WIDTH; x++){if(pixels[y][x].length == 9){data += pixels[y][x].substr(1,9);}else{data += pixels[y][x].substr(1,7) + 'ff';}}}  await fetch(IP + 'api?function=image&image='+data);  await showEffectSettings();}let mode = 'brush';function eBrush(){let paintToolBrush = document.getElementById('paint-tool-brush');let paintToolFill = document.getElementById('paint-tool-fill');let paintToolEyeDropper = document.getElementById('paint-tool-eye-dropper');paintToolBrush.style.background = '#ddd';paintToolFill.style.background = '#fff';paintToolEyeDropper.style.background = '#fff';mode = 'brush';}function eFill(){let paintToolBrush = document.getElementById('paint-tool-brush');let paintToolFill = document.getElementById('paint-tool-fill');let paintToolEyeDropper = document.getElementById('paint-tool-eye-dropper');paintToolBrush.style.background = '#fff';paintToolFill.style.background = '#ddd';paintToolEyeDropper.style.background = '#fff';mode = 'fill';}function eEyeDropper(){let paintToolBrush = document.getElementById('paint-tool-brush');let paintToolFill = document.getElementById('paint-tool-fill');let paintToolEyeDropper = document.getElementById('paint-tool-eye-dropper');paintToolBrush.style.background = '#fff';paintToolFill.style.background = '#fff';paintToolEyeDropper.style.background = '#ddd';mode = 'eye-dropper';}async function eRefresh(){let response = await fetch(IP + 'api?function=getMatrix');let data = await response.text();let i = 0;for(let y = 0; y < HEIGHT; y++){for(let x = 0; x < WIDTH; x++){pixels[y][x] = '#'+data.substr(i*6, 6);i++;}}  await showEffectSettings();}eBrush();eRefresh();setInterval(() => {render();}, 6);";